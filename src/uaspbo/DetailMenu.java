/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uaspbo;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Queue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author M IQBAL
 */
public class DetailMenu extends javax.swing.JFrame {
    private int MAX = 10;
    private int totalAntrian = 0;
    private static int jumlahBelanjaa = 0;
    private Antrian antrian = new Antrian();
    TableModel daftarModel;
    DefaultTableModel model;
    
    
    public DetailMenu() {
        DBConnector.initDBConnection();
        initComponents();
        Timer timer = new Timer(1000, e -> {
            updateTime();
        });
        timer.start();
        antrian = new Antrian();
        generateNoPesanan();
        generateIDTransaksi();
        
        daftarModel = (DefaultTableModel)daftarPesanan.getModel();
        daftarModel.addTableModelListener(new TableModelListener()
                {
            @Override
            public void tableChanged(TableModelEvent e) {
                if(e.getType() == TableModelEvent.INSERT){
                    model = new DefaultTableModel();
                    System.out.println("Terpanggil Lagi");
                    int baris = e.getFirstRow();
                    float harga = (float)daftarPesanan.getValueAt(baris, 2);
                    int jumlah = (int)daftarModel.getValueAt(baris, 3);
                    float total;
                    
                    float totalBelanja = 0.0f; 
                    int jumlahBelanja = daftarModel.getRowCount();
    
                    for(int i=0; i<jumlahBelanja;i++){
                        total = (float)daftarModel.getValueAt(i, 4);
                        totalBelanja = totalBelanja + total;
                    }
                    int totalBelanjaInt = (int)totalBelanja; 
                    tf_totalHarga.setText(String.format("%,d",totalBelanjaInt));
                }  
            }
                }
        );
    }
    
    private void generateNoPesanan(){
        int x = totalAntrian+1;
        tf_noPesanan.setText(Integer.toString(x));
    }
    
    private void generateIDTransaksi(){
          try {
            Statement stmt = DBConnector.connection.createStatement();
            String sql = "SELECT COUNT(*) as jumlah_transaksi FROM transaksi";
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            int JumlahData = rs.getInt("jumlah_transaksi");
            System.out.println(JumlahData);
            int GeneralID = JumlahData+1;
            String idTransString = String.format("TR%03d", GeneralID);

            tf_idTransaksi.setText(idTransString);            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
              
        }
    }
     
    private void updateTime() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        String formattedDate = now.format(formatter);
        tf_waktu.setText(formattedDate);
    }
    
    public void resetData(){
        generateIDTransaksi();
        generateNoPesanan();
    }
    
    
    
    public static void AddRowToJTable(Object[] dataRow){
        jumlahBelanjaa++;
        DefaultTableModel model = (DefaultTableModel) daftarPesanan.getModel();
        model.addRow(dataRow);
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tf_noPesanan = new javax.swing.JTextField();
        tf_nama = new javax.swing.JTextField();
        tf_waktu = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarPesanan = new javax.swing.JTable();
        btn_addQueue = new javax.swing.JButton();
        tf_totalHarga = new javax.swing.JTextField();
        tf_kembalian = new javax.swing.JTextField();
        tf_uangDiberikan = new javax.swing.JTextField();
        btn_menu = new javax.swing.JButton();
        btn_lihatAntri = new javax.swing.JToggleButton();
        tf_idTransaksi = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Harga"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_noPesanan.setEditable(false);
        tf_noPesanan.setBackground(new java.awt.Color(255, 255, 255));
        tf_noPesanan.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_noPesanan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_noPesanan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_noPesanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 300, 170, 40));

        tf_nama.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_nama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_nama.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 240, 40));

        tf_waktu.setEditable(false);
        tf_waktu.setBackground(new java.awt.Color(255, 255, 255));
        tf_waktu.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_waktu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_waktu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_waktu, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 360, 250, 40));

        daftarPesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Nama", "Harga", "Jumlah", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(daftarPesanan);
        if (daftarPesanan.getColumnModel().getColumnCount() > 0) {
            daftarPesanan.getColumnModel().getColumn(0).setResizable(false);
            daftarPesanan.getColumnModel().getColumn(0).setPreferredWidth(10);
            daftarPesanan.getColumnModel().getColumn(1).setResizable(false);
            daftarPesanan.getColumnModel().getColumn(1).setPreferredWidth(200);
            daftarPesanan.getColumnModel().getColumn(2).setResizable(false);
            daftarPesanan.getColumnModel().getColumn(3).setResizable(false);
            daftarPesanan.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 670, 340));

        btn_addQueue.setBackground(new java.awt.Color(253, 206, 4));
        btn_addQueue.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_addQueue.setText("Tambah Antrian");
        btn_addQueue.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_addQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addQueueActionPerformed(evt);
            }
        });
        getContentPane().add(btn_addQueue, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 860, 170, 50));

        tf_totalHarga.setEditable(false);
        tf_totalHarga.setBackground(new java.awt.Color(255, 255, 255));
        tf_totalHarga.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_totalHarga.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_totalHarga.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_totalHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 460, 220, 40));

        tf_kembalian.setEditable(false);
        tf_kembalian.setBackground(new java.awt.Color(255, 255, 255));
        tf_kembalian.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_kembalian.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_kembalian.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_kembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 610, 220, 40));

        tf_uangDiberikan.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_uangDiberikan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_uangDiberikan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        tf_uangDiberikan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_uangDiberikanActionPerformed(evt);
            }
        });
        tf_uangDiberikan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_uangDiberikanKeyReleased(evt);
            }
        });
        getContentPane().add(tf_uangDiberikan, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 530, 220, 40));

        btn_menu.setBackground(new java.awt.Color(193, 0, 45));
        btn_menu.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_menu.setForeground(new java.awt.Color(253, 206, 4));
        btn_menu.setText("Lihat Menu");
        btn_menu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuActionPerformed(evt);
            }
        });
        getContentPane().add(btn_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 860, 150, 50));

        btn_lihatAntri.setBackground(new java.awt.Color(193, 0, 45));
        btn_lihatAntri.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        btn_lihatAntri.setForeground(new java.awt.Color(255, 255, 255));
        btn_lihatAntri.setText("Lihat Antrian");
        btn_lihatAntri.setFocusPainted(false);
        btn_lihatAntri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_lihatAntriActionPerformed(evt);
            }
        });
        getContentPane().add(btn_lihatAntri, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 860, 180, 50));

        tf_idTransaksi.setEditable(false);
        tf_idTransaksi.setBackground(new java.awt.Color(255, 255, 255));
        tf_idTransaksi.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        tf_idTransaksi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_idTransaksi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        getContentPane().add(tf_idTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 300, 140, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/detail.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuActionPerformed
        TambahMenuForm frame = new TambahMenuForm();
        frame.setVisible(true);
    }//GEN-LAST:event_btn_menuActionPerformed

    private void tf_uangDiberikanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_uangDiberikanActionPerformed
        String totalbelanja = tf_totalHarga.getText();
        String stringTotalBelanja = totalbelanja.replace(",", "");
        
        float totalBelanja = Float.valueOf(stringTotalBelanja);
        int totalBelanjaInt = (int)totalBelanja;
        
       String bayar = tf_uangDiberikan.getText();
       String stringBayar = bayar.replace(",", "");
       
        try {
            float dibayar = Float.parseFloat(stringBayar);
            int dibayarInt = (int) dibayar;
            if(dibayarInt < totalBelanjaInt){
            JOptionPane.showMessageDialog(this,"Uang Anda Kurang!!", "Uang Kurang", JOptionPane.ERROR_MESSAGE);
            tf_uangDiberikan.setText("");
            } else {
                int kembalian = dibayarInt - totalBelanjaInt;
                tf_kembalian.setText(String.format("%,d",kembalian));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan angka saja!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            tf_uangDiberikan.setText("");
        }   
    }//GEN-LAST:event_tf_uangDiberikanActionPerformed

    private void tf_uangDiberikanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_uangDiberikanKeyReleased

        String dibayarString = tf_uangDiberikan.getText();
        dibayarString = dibayarString.replace(",","");
        int dibayarInput = Integer.valueOf(dibayarString);
        tf_uangDiberikan.setText(String.format("%,d",dibayarInput));   
    }//GEN-LAST:event_tf_uangDiberikanKeyReleased

    private void btn_addQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addQueueActionPerformed
         DefaultTableModel model = (DefaultTableModel) daftarPesanan.getModel();
 
         if(tf_nama.getText().isEmpty() || tf_totalHarga.getText().isEmpty() || tf_uangDiberikan.getText().isEmpty()){
             JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong. Silakan Isi Dengan Benar","NULL",JOptionPane.ERROR_MESSAGE);
         }  else if(antrian.size()<MAX) {
            String id_transaksi = tf_idTransaksi.getText();
            int idTransaksi = Integer.parseInt(id_transaksi.substring(2));
            
            String no_antrian = tf_noPesanan.getText();
            int nomorAntrian = Integer.parseInt(no_antrian);
            
            String nama = tf_nama.getText();
            
            String totalHarga = tf_totalHarga.getText();
            totalHarga =totalHarga.replace(",","");
            float floatTotalHarga = Float.parseFloat(totalHarga);
            
            String uangDibayar = tf_uangDiberikan.getText();
            uangDibayar =uangDibayar.replace(",","");
            float floatUangDibayar = Float.parseFloat(uangDibayar);
            
            String kembalian = tf_kembalian.getText();
            kembalian =uangDibayar.replace(",","");
            float floatKembalian = Float.parseFloat(kembalian);
            
            String waktu_transaksi = tf_waktu.getText();

            String data = id_transaksi+" - "+no_antrian + " - "+nama+" - "+totalHarga;
            
            Transaksi transaksi = new Transaksi(idTransaksi, nomorAntrian, nama,floatTotalHarga, floatUangDibayar, floatKembalian, waktu_transaksi);
            try {
                  antrian.enqueue(data);
                 transaksi.simpanDatabase();
                  totalAntrian++;
                  generateNoPesanan();
                  generateIDTransaksi();
             } catch (SQLException ex) {
                 Logger.getLogger(DetailMenu.class.getName()).log(Level.SEVERE, null, ex);
             }
            
            Queue<String> queue = antrian.getQueue();
            System.out.println(queue);
            AntrianForm frame = new AntrianForm(antrian);
            frame.setVisible(true);
         } else {
             JOptionPane.showMessageDialog(this, "Antrian Penuh");
         }
         
        tf_nama.setText("");
        model.setRowCount(0);
        tf_totalHarga.setText("");
        tf_uangDiberikan.setText("");
        tf_kembalian.setText("");       
    }//GEN-LAST:event_btn_addQueueActionPerformed

    private void btn_lihatAntriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_lihatAntriActionPerformed
        AntrianForm frame = new AntrianForm(antrian);
        frame.setVisible(true);
    }//GEN-LAST:event_btn_lihatAntriActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addQueue;
    private javax.swing.JToggleButton btn_lihatAntri;
    private javax.swing.JButton btn_menu;
    private static javax.swing.JTable daftarPesanan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable1;
    private javax.swing.JTextField tf_idTransaksi;
    private javax.swing.JTextField tf_kembalian;
    private javax.swing.JTextField tf_nama;
    private javax.swing.JTextField tf_noPesanan;
    private javax.swing.JTextField tf_totalHarga;
    private javax.swing.JTextField tf_uangDiberikan;
    private javax.swing.JTextField tf_waktu;
    // End of variables declaration//GEN-END:variables
}
